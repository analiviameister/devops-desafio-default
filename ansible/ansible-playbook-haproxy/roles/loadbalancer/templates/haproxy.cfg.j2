global
  log /dev/log local0
  log /dev/log    local1 notice
  maxconn 20000
  user haproxy
  group haproxy
  chroot /var/lib/haproxy
  stats socket /var/run/haproxy/info.sock  mode 666 level user
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  daemon

defaults
  mode http
  log global
  retries 2
  timeout connect 5000ms
  timeout server 5000ms
  timeout client 5000ms

listen Statistics
    bind *:81
    mode http
    option httpclose
    stats enable
    stats auth admin:haproxy
    stats show-legends
    stats hide-version
    stats show-desc LB {{ ambiente }} desafio-devops
    stats uri /stats
    stats refresh 5s

listen registry-docker
    bind *:5001
    server WS01 10.15.1.7:5001 check


frontend main
  bind 0.0.0.0:80

    # grafana
    use_backend backend_grafana if { hdr_beg(host)   -i  grafana.desafio }

    # zabbix
    use_backend backend_zabbix if { hdr_beg(host)   -i  zabbix.desafio }

    # jenkins
    use_backend backend_jenkins if { hdr_beg(host)   -i  jenkins.desafio }

    # kubernetes dashboard
    use_backend backend_dashboard_k8s if { hdr_beg(host)   -i  dash.k8s.desafio }

    # app desafio nodejs
    use_backend backend_app if { hdr_beg(host)   -i  app.desafio }

    # kibana
    use_backend backend_kibana  if { hdr_beg(host)   -i  kibana.desafio }

backend backend_grafana
  balance leastconn
  server WS01 10.15.1.4:3000 check

backend backend_zabbix
  balance leastconn
  server WS01 10.15.1.4:11080 check

backend backend_jenkins
  balance leastconn
  server WS01 10.15.1.5:8080 check

backend backend_dashboard_k8s
  redirect scheme https if !{ ssl_fc }
  balance leastconn
  server WS01 10.15.1.8:31000 check ssl verify none

backend backend_app
  balance leastconn
  server WS01 10.15.1.8:30594 check
  server WS02 10.15.1.2:30594 check

backend backend_kibana
  balance leastconn
  server WS01 10.15.1.3:5601 check